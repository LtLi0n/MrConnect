// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServerDiscord.Services;

namespace ServerDiscord.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190730204935_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SharedDiscord.GuildEmote", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("GuildId")
                        .IsRequired();

                    b.Property<bool>("IsAnimated")
                        .HasColumnName("animated?");

                    b.Property<bool>("IsManaged");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<bool>("RequireColons");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("guild_emote");
                });

            modelBuilder.Entity("SharedDiscord.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Discriminator")
                        .HasColumnType("char(4)");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("user");
                });

            modelBuilder.Entity("SharedDiscord.GuildEmote", b =>
                {
                    b.HasOne("SharedDiscord.User", "User")
                        .WithMany("Emotes")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
